// Code generated by gobind. DO NOT EDIT.

// Package main is an autogenerated binder stub for package libcore.
//
//	autogenerated by gobind -lang=go libcore
package main

/*
#include <stdlib.h>
#include <stdint.h>
#include "seq.h"
#include "libcore.h"

*/
import "C"

import (
	_seq "golang.org/x/mobile/bind/seq"
	"libcore"
)

// suppress the error if seq ends up unused
var _ = _seq.FromRefNum

// skipped field BoxInstance.Box with unsupported type: *github.com/matsuridayo/sing-box-extra/boxbox.Box

//export proxylibcore_BoxInstance_ForTest_Set
func proxylibcore_BoxInstance_ForTest_Set(refnum C.int32_t, v C.char) {
	ref := _seq.FromRefNum(int32(refnum))
	_v := v != 0
	ref.Get().(*libcore.BoxInstance).ForTest = _v
}

//export proxylibcore_BoxInstance_ForTest_Get
func proxylibcore_BoxInstance_ForTest_Get(refnum C.int32_t) C.char {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(*libcore.BoxInstance).ForTest
	var _v C.char = 0
	if v {
		_v = 1
	}
	return _v
}

//export proxylibcore_BoxInstance_Close
func proxylibcore_BoxInstance_Close(refnum C.int32_t) C.int32_t {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(*libcore.BoxInstance)
	res_0 := v.Close()
	var _res_0 C.int32_t = _seq.NullRefNum
	if res_0 != nil {
		_res_0 = C.int32_t(_seq.ToRefNum(res_0))
	}
	return _res_0
}

// skipped method BoxInstance.CloseWithTimeout with unsupported parameter or return types

// skipped method BoxInstance.GetLogPlatformFormatter with unsupported parameter or return types

//export proxylibcore_BoxInstance_PreStart
func proxylibcore_BoxInstance_PreStart(refnum C.int32_t) C.int32_t {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(*libcore.BoxInstance)
	res_0 := v.PreStart()
	var _res_0 C.int32_t = _seq.NullRefNum
	if res_0 != nil {
		_res_0 = C.int32_t(_seq.ToRefNum(res_0))
	}
	return _res_0
}

//export proxylibcore_BoxInstance_QueryStats
func proxylibcore_BoxInstance_QueryStats(refnum C.int32_t, param_tag C.nstring, param_direct C.nstring) C.int64_t {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(*libcore.BoxInstance)
	_param_tag := decodeString(param_tag)
	_param_direct := decodeString(param_direct)
	res_0 := v.QueryStats(_param_tag, _param_direct)
	_res_0 := C.int64_t(res_0)
	return _res_0
}

// skipped method BoxInstance.Router with unsupported parameter or return types

//export proxylibcore_BoxInstance_SelectOutbound
func proxylibcore_BoxInstance_SelectOutbound(refnum C.int32_t, param_tag C.nstring) C.char {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(*libcore.BoxInstance)
	_param_tag := decodeString(param_tag)
	res_0 := v.SelectOutbound(_param_tag)
	var _res_0 C.char = 0
	if res_0 {
		_res_0 = 1
	}
	return _res_0
}

//export proxylibcore_BoxInstance_SetAsMain
func proxylibcore_BoxInstance_SetAsMain(refnum C.int32_t) {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(*libcore.BoxInstance)
	v.SetAsMain()
}

//export proxylibcore_BoxInstance_SetConnectionPoolEnabled
func proxylibcore_BoxInstance_SetConnectionPoolEnabled(refnum C.int32_t, param_enable C.char) {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(*libcore.BoxInstance)
	_param_enable := param_enable != 0
	v.SetConnectionPoolEnabled(_param_enable)
}

// skipped method BoxInstance.SetLogWritter with unsupported parameter or return types

//export proxylibcore_BoxInstance_SetV2rayStats
func proxylibcore_BoxInstance_SetV2rayStats(refnum C.int32_t, param_outbounds C.nstring) {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(*libcore.BoxInstance)
	_param_outbounds := decodeString(param_outbounds)
	v.SetV2rayStats(_param_outbounds)
}

//export proxylibcore_BoxInstance_Sleep
func proxylibcore_BoxInstance_Sleep(refnum C.int32_t) {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(*libcore.BoxInstance)
	v.Sleep()
}

//export proxylibcore_BoxInstance_Start
func proxylibcore_BoxInstance_Start(refnum C.int32_t) C.int32_t {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(*libcore.BoxInstance)
	res_0 := v.Start()
	var _res_0 C.int32_t = _seq.NullRefNum
	if res_0 != nil {
		_res_0 = C.int32_t(_seq.ToRefNum(res_0))
	}
	return _res_0
}

//export proxylibcore_BoxInstance_Wake
func proxylibcore_BoxInstance_Wake(refnum C.int32_t) {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(*libcore.BoxInstance)
	v.Wake()
}

//export new_libcore_BoxInstance
func new_libcore_BoxInstance() C.int32_t {
	return C.int32_t(_seq.ToRefNum(new(libcore.BoxInstance)))
}

//export proxylibcore_ExchangeContext_ErrnoCode
func proxylibcore_ExchangeContext_ErrnoCode(refnum C.int32_t, param_code C.int32_t) {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(*libcore.ExchangeContext)
	_param_code := int32(param_code)
	v.ErrnoCode(_param_code)
}

//export proxylibcore_ExchangeContext_ErrorCode
func proxylibcore_ExchangeContext_ErrorCode(refnum C.int32_t, param_code C.int32_t) {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(*libcore.ExchangeContext)
	_param_code := int32(param_code)
	v.ErrorCode(_param_code)
}

//export proxylibcore_ExchangeContext_OnCancel
func proxylibcore_ExchangeContext_OnCancel(refnum C.int32_t, param_callback C.int32_t) {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(*libcore.ExchangeContext)
	var _param_callback libcore.Func
	_param_callback_ref := _seq.FromRefNum(int32(param_callback))
	if _param_callback_ref != nil {
		if param_callback < 0 { // go object
			_param_callback = _param_callback_ref.Get().(libcore.Func)
		} else { // foreign object
			_param_callback = (*proxylibcore_Func)(_param_callback_ref)
		}
	}
	v.OnCancel(_param_callback)
}

//export proxylibcore_ExchangeContext_RawSuccess
func proxylibcore_ExchangeContext_RawSuccess(refnum C.int32_t, param_result C.nbyteslice) {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(*libcore.ExchangeContext)
	_param_result := toSlice(param_result, false)
	v.RawSuccess(_param_result)
}

//export proxylibcore_ExchangeContext_Success
func proxylibcore_ExchangeContext_Success(refnum C.int32_t, param_result C.nstring) {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(*libcore.ExchangeContext)
	_param_result := decodeString(param_result)
	v.Success(_param_result)
}

//export new_libcore_ExchangeContext
func new_libcore_ExchangeContext() C.int32_t {
	return C.int32_t(_seq.ToRefNum(new(libcore.ExchangeContext)))
}

//export proxylibcore_StunResult_Text_Set
func proxylibcore_StunResult_Text_Set(refnum C.int32_t, v C.nstring) {
	ref := _seq.FromRefNum(int32(refnum))
	_v := decodeString(v)
	ref.Get().(*libcore.StunResult).Text = _v
}

//export proxylibcore_StunResult_Text_Get
func proxylibcore_StunResult_Text_Get(refnum C.int32_t) C.nstring {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(*libcore.StunResult).Text
	_v := encodeString(v)
	return _v
}

//export proxylibcore_StunResult_Success_Set
func proxylibcore_StunResult_Success_Set(refnum C.int32_t, v C.char) {
	ref := _seq.FromRefNum(int32(refnum))
	_v := v != 0
	ref.Get().(*libcore.StunResult).Success = _v
}

//export proxylibcore_StunResult_Success_Get
func proxylibcore_StunResult_Success_Get(refnum C.int32_t) C.char {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(*libcore.StunResult).Success
	var _v C.char = 0
	if v {
		_v = 1
	}
	return _v
}

//export new_libcore_StunResult
func new_libcore_StunResult() C.int32_t {
	return C.int32_t(_seq.ToRefNum(new(libcore.StunResult)))
}

//export proxylibcore_BoxPlatformInterface_AutoDetectInterfaceControl
func proxylibcore_BoxPlatformInterface_AutoDetectInterfaceControl(refnum C.int32_t, param_fd C.int32_t) C.int32_t {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(libcore.BoxPlatformInterface)
	_param_fd := int32(param_fd)
	res_0 := v.AutoDetectInterfaceControl(_param_fd)
	var _res_0 C.int32_t = _seq.NullRefNum
	if res_0 != nil {
		_res_0 = C.int32_t(_seq.ToRefNum(res_0))
	}
	return _res_0
}

//export proxylibcore_BoxPlatformInterface_FindConnectionOwner
func proxylibcore_BoxPlatformInterface_FindConnectionOwner(refnum C.int32_t, param_ipProtocol C.int32_t, param_sourceAddress C.nstring, param_sourcePort C.int32_t, param_destinationAddress C.nstring, param_destinationPort C.int32_t) (C.int32_t, C.int32_t) {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(libcore.BoxPlatformInterface)
	_param_ipProtocol := int32(param_ipProtocol)
	_param_sourceAddress := decodeString(param_sourceAddress)
	_param_sourcePort := int32(param_sourcePort)
	_param_destinationAddress := decodeString(param_destinationAddress)
	_param_destinationPort := int32(param_destinationPort)
	res_0, res_1 := v.FindConnectionOwner(_param_ipProtocol, _param_sourceAddress, _param_sourcePort, _param_destinationAddress, _param_destinationPort)
	_res_0 := C.int32_t(res_0)
	var _res_1 C.int32_t = _seq.NullRefNum
	if res_1 != nil {
		_res_1 = C.int32_t(_seq.ToRefNum(res_1))
	}
	return _res_0, _res_1
}

//export proxylibcore_BoxPlatformInterface_OpenTun
func proxylibcore_BoxPlatformInterface_OpenTun(refnum C.int32_t, param_singTunOptionsJson C.nstring, param_tunPlatformOptionsJson C.nstring) (C.nint, C.int32_t) {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(libcore.BoxPlatformInterface)
	_param_singTunOptionsJson := decodeString(param_singTunOptionsJson)
	_param_tunPlatformOptionsJson := decodeString(param_tunPlatformOptionsJson)
	res_0, res_1 := v.OpenTun(_param_singTunOptionsJson, _param_tunPlatformOptionsJson)
	_res_0 := C.nint(res_0)
	var _res_1 C.int32_t = _seq.NullRefNum
	if res_1 != nil {
		_res_1 = C.int32_t(_seq.ToRefNum(res_1))
	}
	return _res_0, _res_1
}

//export proxylibcore_BoxPlatformInterface_PackageNameByUid
func proxylibcore_BoxPlatformInterface_PackageNameByUid(refnum C.int32_t, param_uid C.int32_t) (C.nstring, C.int32_t) {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(libcore.BoxPlatformInterface)
	_param_uid := int32(param_uid)
	res_0, res_1 := v.PackageNameByUid(_param_uid)
	_res_0 := encodeString(res_0)
	var _res_1 C.int32_t = _seq.NullRefNum
	if res_1 != nil {
		_res_1 = C.int32_t(_seq.ToRefNum(res_1))
	}
	return _res_0, _res_1
}

//export proxylibcore_BoxPlatformInterface_UIDByPackageName
func proxylibcore_BoxPlatformInterface_UIDByPackageName(refnum C.int32_t, param_packageName C.nstring) (C.int32_t, C.int32_t) {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(libcore.BoxPlatformInterface)
	_param_packageName := decodeString(param_packageName)
	res_0, res_1 := v.UIDByPackageName(_param_packageName)
	_res_0 := C.int32_t(res_0)
	var _res_1 C.int32_t = _seq.NullRefNum
	if res_1 != nil {
		_res_1 = C.int32_t(_seq.ToRefNum(res_1))
	}
	return _res_0, _res_1
}

//export proxylibcore_BoxPlatformInterface_UseProcFS
func proxylibcore_BoxPlatformInterface_UseProcFS(refnum C.int32_t) C.char {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(libcore.BoxPlatformInterface)
	res_0 := v.UseProcFS()
	var _res_0 C.char = 0
	if res_0 {
		_res_0 = 1
	}
	return _res_0
}

//export proxylibcore_BoxPlatformInterface_WIFIState
func proxylibcore_BoxPlatformInterface_WIFIState(refnum C.int32_t) C.nstring {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(libcore.BoxPlatformInterface)
	res_0 := v.WIFIState()
	_res_0 := encodeString(res_0)
	return _res_0
}

type proxylibcore_BoxPlatformInterface _seq.Ref

func (p *proxylibcore_BoxPlatformInterface) Bind_proxy_refnum__() int32 {
	return (*_seq.Ref)(p).Bind_IncNum()
}

func (p *proxylibcore_BoxPlatformInterface) AutoDetectInterfaceControl(param_fd int32) error {
	_param_fd := C.int32_t(param_fd)
	res := C.cproxylibcore_BoxPlatformInterface_AutoDetectInterfaceControl(C.int32_t(p.Bind_proxy_refnum__()), _param_fd)
	var _res error
	_res_ref := _seq.FromRefNum(int32(res))
	if _res_ref != nil {
		if res < 0 { // go object
			_res = _res_ref.Get().(error)
		} else { // foreign object
			_res = (*proxy_error)(_res_ref)
		}
	}
	return _res
}

func (p *proxylibcore_BoxPlatformInterface) FindConnectionOwner(param_ipProtocol int32, param_sourceAddress string, param_sourcePort int32, param_destinationAddress string, param_destinationPort int32) (int32, error) {
	_param_ipProtocol := C.int32_t(param_ipProtocol)
	_param_sourceAddress := encodeString(param_sourceAddress)
	_param_sourcePort := C.int32_t(param_sourcePort)
	_param_destinationAddress := encodeString(param_destinationAddress)
	_param_destinationPort := C.int32_t(param_destinationPort)
	res := C.cproxylibcore_BoxPlatformInterface_FindConnectionOwner(C.int32_t(p.Bind_proxy_refnum__()), _param_ipProtocol, _param_sourceAddress, _param_sourcePort, _param_destinationAddress, _param_destinationPort)
	res_0 := int32(res.r0)
	var res_1 error
	res_1_ref := _seq.FromRefNum(int32(res.r1))
	if res_1_ref != nil {
		if res.r1 < 0 { // go object
			res_1 = res_1_ref.Get().(error)
		} else { // foreign object
			res_1 = (*proxy_error)(res_1_ref)
		}
	}
	return res_0, res_1
}

func (p *proxylibcore_BoxPlatformInterface) OpenTun(param_singTunOptionsJson string, param_tunPlatformOptionsJson string) (int, error) {
	_param_singTunOptionsJson := encodeString(param_singTunOptionsJson)
	_param_tunPlatformOptionsJson := encodeString(param_tunPlatformOptionsJson)
	res := C.cproxylibcore_BoxPlatformInterface_OpenTun(C.int32_t(p.Bind_proxy_refnum__()), _param_singTunOptionsJson, _param_tunPlatformOptionsJson)
	res_0 := int(res.r0)
	var res_1 error
	res_1_ref := _seq.FromRefNum(int32(res.r1))
	if res_1_ref != nil {
		if res.r1 < 0 { // go object
			res_1 = res_1_ref.Get().(error)
		} else { // foreign object
			res_1 = (*proxy_error)(res_1_ref)
		}
	}
	return res_0, res_1
}

func (p *proxylibcore_BoxPlatformInterface) PackageNameByUid(param_uid int32) (string, error) {
	_param_uid := C.int32_t(param_uid)
	res := C.cproxylibcore_BoxPlatformInterface_PackageNameByUid(C.int32_t(p.Bind_proxy_refnum__()), _param_uid)
	res_0 := decodeString(res.r0)
	var res_1 error
	res_1_ref := _seq.FromRefNum(int32(res.r1))
	if res_1_ref != nil {
		if res.r1 < 0 { // go object
			res_1 = res_1_ref.Get().(error)
		} else { // foreign object
			res_1 = (*proxy_error)(res_1_ref)
		}
	}
	return res_0, res_1
}

func (p *proxylibcore_BoxPlatformInterface) UIDByPackageName(param_packageName string) (int32, error) {
	_param_packageName := encodeString(param_packageName)
	res := C.cproxylibcore_BoxPlatformInterface_UIDByPackageName(C.int32_t(p.Bind_proxy_refnum__()), _param_packageName)
	res_0 := int32(res.r0)
	var res_1 error
	res_1_ref := _seq.FromRefNum(int32(res.r1))
	if res_1_ref != nil {
		if res.r1 < 0 { // go object
			res_1 = res_1_ref.Get().(error)
		} else { // foreign object
			res_1 = (*proxy_error)(res_1_ref)
		}
	}
	return res_0, res_1
}

func (p *proxylibcore_BoxPlatformInterface) UseProcFS() bool {
	res := C.cproxylibcore_BoxPlatformInterface_UseProcFS(C.int32_t(p.Bind_proxy_refnum__()))
	_res := res != 0
	return _res
}

func (p *proxylibcore_BoxPlatformInterface) WIFIState() string {
	res := C.cproxylibcore_BoxPlatformInterface_WIFIState(C.int32_t(p.Bind_proxy_refnum__()))
	_res := decodeString(res)
	return _res
}

//export proxylibcore_Func_Invoke
func proxylibcore_Func_Invoke(refnum C.int32_t) C.int32_t {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(libcore.Func)
	res_0 := v.Invoke()
	var _res_0 C.int32_t = _seq.NullRefNum
	if res_0 != nil {
		_res_0 = C.int32_t(_seq.ToRefNum(res_0))
	}
	return _res_0
}

type proxylibcore_Func _seq.Ref

func (p *proxylibcore_Func) Bind_proxy_refnum__() int32 {
	return (*_seq.Ref)(p).Bind_IncNum()
}

func (p *proxylibcore_Func) Invoke() error {
	res := C.cproxylibcore_Func_Invoke(C.int32_t(p.Bind_proxy_refnum__()))
	var _res error
	_res_ref := _seq.FromRefNum(int32(res))
	if _res_ref != nil {
		if res < 0 { // go object
			_res = _res_ref.Get().(error)
		} else { // foreign object
			_res = (*proxy_error)(_res_ref)
		}
	}
	return _res
}

//export proxylibcore_HTTPClient_Close
func proxylibcore_HTTPClient_Close(refnum C.int32_t) {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(libcore.HTTPClient)
	v.Close()
}

//export proxylibcore_HTTPClient_KeepAlive
func proxylibcore_HTTPClient_KeepAlive(refnum C.int32_t) {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(libcore.HTTPClient)
	v.KeepAlive()
}

//export proxylibcore_HTTPClient_ModernTLS
func proxylibcore_HTTPClient_ModernTLS(refnum C.int32_t) {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(libcore.HTTPClient)
	v.ModernTLS()
}

//export proxylibcore_HTTPClient_NewRequest
func proxylibcore_HTTPClient_NewRequest(refnum C.int32_t) C.int32_t {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(libcore.HTTPClient)
	res_0 := v.NewRequest()
	var _res_0 C.int32_t = _seq.NullRefNum
	if res_0 != nil {
		_res_0 = C.int32_t(_seq.ToRefNum(res_0))
	}
	return _res_0
}

//export proxylibcore_HTTPClient_PinnedSHA256
func proxylibcore_HTTPClient_PinnedSHA256(refnum C.int32_t, param_sumHex C.nstring) {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(libcore.HTTPClient)
	_param_sumHex := decodeString(param_sumHex)
	v.PinnedSHA256(_param_sumHex)
}

//export proxylibcore_HTTPClient_PinnedTLS12
func proxylibcore_HTTPClient_PinnedTLS12(refnum C.int32_t) {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(libcore.HTTPClient)
	v.PinnedTLS12()
}

//export proxylibcore_HTTPClient_RestrictedTLS
func proxylibcore_HTTPClient_RestrictedTLS(refnum C.int32_t) {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(libcore.HTTPClient)
	v.RestrictedTLS()
}

//export proxylibcore_HTTPClient_TrySocks5
func proxylibcore_HTTPClient_TrySocks5(refnum C.int32_t, param_port C.int32_t) {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(libcore.HTTPClient)
	_param_port := int32(param_port)
	v.TrySocks5(_param_port)
}

type proxylibcore_HTTPClient _seq.Ref

func (p *proxylibcore_HTTPClient) Bind_proxy_refnum__() int32 {
	return (*_seq.Ref)(p).Bind_IncNum()
}

func (p *proxylibcore_HTTPClient) Close() {
	C.cproxylibcore_HTTPClient_Close(C.int32_t(p.Bind_proxy_refnum__()))
}

func (p *proxylibcore_HTTPClient) KeepAlive() {
	C.cproxylibcore_HTTPClient_KeepAlive(C.int32_t(p.Bind_proxy_refnum__()))
}

func (p *proxylibcore_HTTPClient) ModernTLS() {
	C.cproxylibcore_HTTPClient_ModernTLS(C.int32_t(p.Bind_proxy_refnum__()))
}

func (p *proxylibcore_HTTPClient) NewRequest() libcore.HTTPRequest {
	res := C.cproxylibcore_HTTPClient_NewRequest(C.int32_t(p.Bind_proxy_refnum__()))
	var _res libcore.HTTPRequest
	_res_ref := _seq.FromRefNum(int32(res))
	if _res_ref != nil {
		if res < 0 { // go object
			_res = _res_ref.Get().(libcore.HTTPRequest)
		} else { // foreign object
			_res = (*proxylibcore_HTTPRequest)(_res_ref)
		}
	}
	return _res
}

func (p *proxylibcore_HTTPClient) PinnedSHA256(param_sumHex string) {
	_param_sumHex := encodeString(param_sumHex)
	C.cproxylibcore_HTTPClient_PinnedSHA256(C.int32_t(p.Bind_proxy_refnum__()), _param_sumHex)
}

func (p *proxylibcore_HTTPClient) PinnedTLS12() {
	C.cproxylibcore_HTTPClient_PinnedTLS12(C.int32_t(p.Bind_proxy_refnum__()))
}

func (p *proxylibcore_HTTPClient) RestrictedTLS() {
	C.cproxylibcore_HTTPClient_RestrictedTLS(C.int32_t(p.Bind_proxy_refnum__()))
}

func (p *proxylibcore_HTTPClient) TrySocks5(param_port int32) {
	_param_port := C.int32_t(param_port)
	C.cproxylibcore_HTTPClient_TrySocks5(C.int32_t(p.Bind_proxy_refnum__()), _param_port)
}

//export proxylibcore_HTTPRequest_AllowInsecure
func proxylibcore_HTTPRequest_AllowInsecure(refnum C.int32_t) {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(libcore.HTTPRequest)
	v.AllowInsecure()
}

//export proxylibcore_HTTPRequest_Execute
func proxylibcore_HTTPRequest_Execute(refnum C.int32_t) (C.int32_t, C.int32_t) {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(libcore.HTTPRequest)
	res_0, res_1 := v.Execute()
	var _res_0 C.int32_t = _seq.NullRefNum
	if res_0 != nil {
		_res_0 = C.int32_t(_seq.ToRefNum(res_0))
	}
	var _res_1 C.int32_t = _seq.NullRefNum
	if res_1 != nil {
		_res_1 = C.int32_t(_seq.ToRefNum(res_1))
	}
	return _res_0, _res_1
}

//export proxylibcore_HTTPRequest_SetContent
func proxylibcore_HTTPRequest_SetContent(refnum C.int32_t, param_content C.nbyteslice) {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(libcore.HTTPRequest)
	_param_content := toSlice(param_content, false)
	v.SetContent(_param_content)
}

//export proxylibcore_HTTPRequest_SetContentString
func proxylibcore_HTTPRequest_SetContentString(refnum C.int32_t, param_content C.nstring) {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(libcore.HTTPRequest)
	_param_content := decodeString(param_content)
	v.SetContentString(_param_content)
}

//export proxylibcore_HTTPRequest_SetHeader
func proxylibcore_HTTPRequest_SetHeader(refnum C.int32_t, param_key C.nstring, param_value C.nstring) {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(libcore.HTTPRequest)
	_param_key := decodeString(param_key)
	_param_value := decodeString(param_value)
	v.SetHeader(_param_key, _param_value)
}

//export proxylibcore_HTTPRequest_SetMethod
func proxylibcore_HTTPRequest_SetMethod(refnum C.int32_t, param_method C.nstring) {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(libcore.HTTPRequest)
	_param_method := decodeString(param_method)
	v.SetMethod(_param_method)
}

//export proxylibcore_HTTPRequest_SetURL
func proxylibcore_HTTPRequest_SetURL(refnum C.int32_t, param_link C.nstring) C.int32_t {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(libcore.HTTPRequest)
	_param_link := decodeString(param_link)
	res_0 := v.SetURL(_param_link)
	var _res_0 C.int32_t = _seq.NullRefNum
	if res_0 != nil {
		_res_0 = C.int32_t(_seq.ToRefNum(res_0))
	}
	return _res_0
}

//export proxylibcore_HTTPRequest_SetUserAgent
func proxylibcore_HTTPRequest_SetUserAgent(refnum C.int32_t, param_userAgent C.nstring) {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(libcore.HTTPRequest)
	_param_userAgent := decodeString(param_userAgent)
	v.SetUserAgent(_param_userAgent)
}

type proxylibcore_HTTPRequest _seq.Ref

func (p *proxylibcore_HTTPRequest) Bind_proxy_refnum__() int32 {
	return (*_seq.Ref)(p).Bind_IncNum()
}

func (p *proxylibcore_HTTPRequest) AllowInsecure() {
	C.cproxylibcore_HTTPRequest_AllowInsecure(C.int32_t(p.Bind_proxy_refnum__()))
}

func (p *proxylibcore_HTTPRequest) Execute() (libcore.HTTPResponse, error) {
	res := C.cproxylibcore_HTTPRequest_Execute(C.int32_t(p.Bind_proxy_refnum__()))
	var res_0 libcore.HTTPResponse
	res_0_ref := _seq.FromRefNum(int32(res.r0))
	if res_0_ref != nil {
		if res.r0 < 0 { // go object
			res_0 = res_0_ref.Get().(libcore.HTTPResponse)
		} else { // foreign object
			res_0 = (*proxylibcore_HTTPResponse)(res_0_ref)
		}
	}
	var res_1 error
	res_1_ref := _seq.FromRefNum(int32(res.r1))
	if res_1_ref != nil {
		if res.r1 < 0 { // go object
			res_1 = res_1_ref.Get().(error)
		} else { // foreign object
			res_1 = (*proxy_error)(res_1_ref)
		}
	}
	return res_0, res_1
}

func (p *proxylibcore_HTTPRequest) SetContent(param_content []byte) {
	_param_content := fromSlice(param_content, false)
	C.cproxylibcore_HTTPRequest_SetContent(C.int32_t(p.Bind_proxy_refnum__()), _param_content)
}

func (p *proxylibcore_HTTPRequest) SetContentString(param_content string) {
	_param_content := encodeString(param_content)
	C.cproxylibcore_HTTPRequest_SetContentString(C.int32_t(p.Bind_proxy_refnum__()), _param_content)
}

func (p *proxylibcore_HTTPRequest) SetHeader(param_key string, param_value string) {
	_param_key := encodeString(param_key)
	_param_value := encodeString(param_value)
	C.cproxylibcore_HTTPRequest_SetHeader(C.int32_t(p.Bind_proxy_refnum__()), _param_key, _param_value)
}

func (p *proxylibcore_HTTPRequest) SetMethod(param_method string) {
	_param_method := encodeString(param_method)
	C.cproxylibcore_HTTPRequest_SetMethod(C.int32_t(p.Bind_proxy_refnum__()), _param_method)
}

func (p *proxylibcore_HTTPRequest) SetURL(param_link string) error {
	_param_link := encodeString(param_link)
	res := C.cproxylibcore_HTTPRequest_SetURL(C.int32_t(p.Bind_proxy_refnum__()), _param_link)
	var _res error
	_res_ref := _seq.FromRefNum(int32(res))
	if _res_ref != nil {
		if res < 0 { // go object
			_res = _res_ref.Get().(error)
		} else { // foreign object
			_res = (*proxy_error)(_res_ref)
		}
	}
	return _res
}

func (p *proxylibcore_HTTPRequest) SetUserAgent(param_userAgent string) {
	_param_userAgent := encodeString(param_userAgent)
	C.cproxylibcore_HTTPRequest_SetUserAgent(C.int32_t(p.Bind_proxy_refnum__()), _param_userAgent)
}

//export proxylibcore_HTTPResponse_GetContent
func proxylibcore_HTTPResponse_GetContent(refnum C.int32_t) (C.nbyteslice, C.int32_t) {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(libcore.HTTPResponse)
	res_0, res_1 := v.GetContent()
	_res_0 := fromSlice(res_0, true)
	var _res_1 C.int32_t = _seq.NullRefNum
	if res_1 != nil {
		_res_1 = C.int32_t(_seq.ToRefNum(res_1))
	}
	return _res_0, _res_1
}

//export proxylibcore_HTTPResponse_GetContentString
func proxylibcore_HTTPResponse_GetContentString(refnum C.int32_t) (C.nstring, C.int32_t) {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(libcore.HTTPResponse)
	res_0, res_1 := v.GetContentString()
	_res_0 := encodeString(res_0)
	var _res_1 C.int32_t = _seq.NullRefNum
	if res_1 != nil {
		_res_1 = C.int32_t(_seq.ToRefNum(res_1))
	}
	return _res_0, _res_1
}

//export proxylibcore_HTTPResponse_GetHeader
func proxylibcore_HTTPResponse_GetHeader(refnum C.int32_t, param_p0 C.nstring) C.nstring {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(libcore.HTTPResponse)
	_param_p0 := decodeString(param_p0)
	res_0 := v.GetHeader(_param_p0)
	_res_0 := encodeString(res_0)
	return _res_0
}

//export proxylibcore_HTTPResponse_WriteTo
func proxylibcore_HTTPResponse_WriteTo(refnum C.int32_t, param_path C.nstring) C.int32_t {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(libcore.HTTPResponse)
	_param_path := decodeString(param_path)
	res_0 := v.WriteTo(_param_path)
	var _res_0 C.int32_t = _seq.NullRefNum
	if res_0 != nil {
		_res_0 = C.int32_t(_seq.ToRefNum(res_0))
	}
	return _res_0
}

type proxylibcore_HTTPResponse _seq.Ref

func (p *proxylibcore_HTTPResponse) Bind_proxy_refnum__() int32 {
	return (*_seq.Ref)(p).Bind_IncNum()
}

func (p *proxylibcore_HTTPResponse) GetContent() ([]byte, error) {
	res := C.cproxylibcore_HTTPResponse_GetContent(C.int32_t(p.Bind_proxy_refnum__()))
	res_0 := toSlice(res.r0, true)
	var res_1 error
	res_1_ref := _seq.FromRefNum(int32(res.r1))
	if res_1_ref != nil {
		if res.r1 < 0 { // go object
			res_1 = res_1_ref.Get().(error)
		} else { // foreign object
			res_1 = (*proxy_error)(res_1_ref)
		}
	}
	return res_0, res_1
}

func (p *proxylibcore_HTTPResponse) GetContentString() (string, error) {
	res := C.cproxylibcore_HTTPResponse_GetContentString(C.int32_t(p.Bind_proxy_refnum__()))
	res_0 := decodeString(res.r0)
	var res_1 error
	res_1_ref := _seq.FromRefNum(int32(res.r1))
	if res_1_ref != nil {
		if res.r1 < 0 { // go object
			res_1 = res_1_ref.Get().(error)
		} else { // foreign object
			res_1 = (*proxy_error)(res_1_ref)
		}
	}
	return res_0, res_1
}

func (p *proxylibcore_HTTPResponse) GetHeader(param_p0 string) string {
	_param_p0 := encodeString(param_p0)
	res := C.cproxylibcore_HTTPResponse_GetHeader(C.int32_t(p.Bind_proxy_refnum__()), _param_p0)
	_res := decodeString(res)
	return _res
}

func (p *proxylibcore_HTTPResponse) WriteTo(param_path string) error {
	_param_path := encodeString(param_path)
	res := C.cproxylibcore_HTTPResponse_WriteTo(C.int32_t(p.Bind_proxy_refnum__()), _param_path)
	var _res error
	_res_ref := _seq.FromRefNum(int32(res))
	if _res_ref != nil {
		if res < 0 { // go object
			_res = _res_ref.Get().(error)
		} else { // foreign object
			_res = (*proxy_error)(_res_ref)
		}
	}
	return _res
}

//export proxylibcore_LocalDNSTransport_Exchange
func proxylibcore_LocalDNSTransport_Exchange(refnum C.int32_t, param_ctx C.int32_t, param_message C.nbyteslice) C.int32_t {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(libcore.LocalDNSTransport)
	// Must be a Go object
	var _param_ctx *libcore.ExchangeContext
	if _param_ctx_ref := _seq.FromRefNum(int32(param_ctx)); _param_ctx_ref != nil {
		_param_ctx = _param_ctx_ref.Get().(*libcore.ExchangeContext)
	}
	_param_message := toSlice(param_message, false)
	res_0 := v.Exchange(_param_ctx, _param_message)
	var _res_0 C.int32_t = _seq.NullRefNum
	if res_0 != nil {
		_res_0 = C.int32_t(_seq.ToRefNum(res_0))
	}
	return _res_0
}

//export proxylibcore_LocalDNSTransport_Lookup
func proxylibcore_LocalDNSTransport_Lookup(refnum C.int32_t, param_ctx C.int32_t, param_network C.nstring, param_domain C.nstring) C.int32_t {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(libcore.LocalDNSTransport)
	// Must be a Go object
	var _param_ctx *libcore.ExchangeContext
	if _param_ctx_ref := _seq.FromRefNum(int32(param_ctx)); _param_ctx_ref != nil {
		_param_ctx = _param_ctx_ref.Get().(*libcore.ExchangeContext)
	}
	_param_network := decodeString(param_network)
	_param_domain := decodeString(param_domain)
	res_0 := v.Lookup(_param_ctx, _param_network, _param_domain)
	var _res_0 C.int32_t = _seq.NullRefNum
	if res_0 != nil {
		_res_0 = C.int32_t(_seq.ToRefNum(res_0))
	}
	return _res_0
}

//export proxylibcore_LocalDNSTransport_Raw
func proxylibcore_LocalDNSTransport_Raw(refnum C.int32_t) C.char {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(libcore.LocalDNSTransport)
	res_0 := v.Raw()
	var _res_0 C.char = 0
	if res_0 {
		_res_0 = 1
	}
	return _res_0
}

type proxylibcore_LocalDNSTransport _seq.Ref

func (p *proxylibcore_LocalDNSTransport) Bind_proxy_refnum__() int32 {
	return (*_seq.Ref)(p).Bind_IncNum()
}

func (p *proxylibcore_LocalDNSTransport) Exchange(param_ctx *libcore.ExchangeContext, param_message []byte) error {
	var _param_ctx C.int32_t = _seq.NullRefNum
	if param_ctx != nil {
		_param_ctx = C.int32_t(_seq.ToRefNum(param_ctx))
	}
	_param_message := fromSlice(param_message, false)
	res := C.cproxylibcore_LocalDNSTransport_Exchange(C.int32_t(p.Bind_proxy_refnum__()), _param_ctx, _param_message)
	var _res error
	_res_ref := _seq.FromRefNum(int32(res))
	if _res_ref != nil {
		if res < 0 { // go object
			_res = _res_ref.Get().(error)
		} else { // foreign object
			_res = (*proxy_error)(_res_ref)
		}
	}
	return _res
}

func (p *proxylibcore_LocalDNSTransport) Lookup(param_ctx *libcore.ExchangeContext, param_network string, param_domain string) error {
	var _param_ctx C.int32_t = _seq.NullRefNum
	if param_ctx != nil {
		_param_ctx = C.int32_t(_seq.ToRefNum(param_ctx))
	}
	_param_network := encodeString(param_network)
	_param_domain := encodeString(param_domain)
	res := C.cproxylibcore_LocalDNSTransport_Lookup(C.int32_t(p.Bind_proxy_refnum__()), _param_ctx, _param_network, _param_domain)
	var _res error
	_res_ref := _seq.FromRefNum(int32(res))
	if _res_ref != nil {
		if res < 0 { // go object
			_res = _res_ref.Get().(error)
		} else { // foreign object
			_res = (*proxy_error)(_res_ref)
		}
	}
	return _res
}

func (p *proxylibcore_LocalDNSTransport) Raw() bool {
	res := C.cproxylibcore_LocalDNSTransport_Raw(C.int32_t(p.Bind_proxy_refnum__()))
	_res := res != 0
	return _res
}

//export proxylibcore_NB4AInterface_Selector_OnProxySelected
func proxylibcore_NB4AInterface_Selector_OnProxySelected(refnum C.int32_t, param_selectorTag C.nstring, param_tag C.nstring) {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(libcore.NB4AInterface)
	_param_selectorTag := decodeString(param_selectorTag)
	_param_tag := decodeString(param_tag)
	v.Selector_OnProxySelected(_param_selectorTag, _param_tag)
}

//export proxylibcore_NB4AInterface_UseOfficialAssets
func proxylibcore_NB4AInterface_UseOfficialAssets(refnum C.int32_t) C.char {
	ref := _seq.FromRefNum(int32(refnum))
	v := ref.Get().(libcore.NB4AInterface)
	res_0 := v.UseOfficialAssets()
	var _res_0 C.char = 0
	if res_0 {
		_res_0 = 1
	}
	return _res_0
}

type proxylibcore_NB4AInterface _seq.Ref

func (p *proxylibcore_NB4AInterface) Bind_proxy_refnum__() int32 {
	return (*_seq.Ref)(p).Bind_IncNum()
}

func (p *proxylibcore_NB4AInterface) Selector_OnProxySelected(param_selectorTag string, param_tag string) {
	_param_selectorTag := encodeString(param_selectorTag)
	_param_tag := encodeString(param_tag)
	C.cproxylibcore_NB4AInterface_Selector_OnProxySelected(C.int32_t(p.Bind_proxy_refnum__()), _param_selectorTag, _param_tag)
}

func (p *proxylibcore_NB4AInterface) UseOfficialAssets() bool {
	res := C.cproxylibcore_NB4AInterface_UseOfficialAssets(C.int32_t(p.Bind_proxy_refnum__()))
	_res := res != 0
	return _res
}

//export proxylibcore__ForceGc
func proxylibcore__ForceGc() {
	libcore.ForceGc()
}

//export proxylibcore__InitCore
func proxylibcore__InitCore(param_process C.nstring, param_cachePath C.nstring, param_internalAssets C.nstring, param_externalAssets C.nstring, param_maxLogSizeKb C.int32_t, param_logEnable C.char, param_if1 C.int32_t, param_if2 C.int32_t) {
	_param_process := decodeString(param_process)
	_param_cachePath := decodeString(param_cachePath)
	_param_internalAssets := decodeString(param_internalAssets)
	_param_externalAssets := decodeString(param_externalAssets)
	_param_maxLogSizeKb := int32(param_maxLogSizeKb)
	_param_logEnable := param_logEnable != 0
	var _param_if1 libcore.NB4AInterface
	_param_if1_ref := _seq.FromRefNum(int32(param_if1))
	if _param_if1_ref != nil {
		if param_if1 < 0 { // go object
			_param_if1 = _param_if1_ref.Get().(libcore.NB4AInterface)
		} else { // foreign object
			_param_if1 = (*proxylibcore_NB4AInterface)(_param_if1_ref)
		}
	}
	var _param_if2 libcore.BoxPlatformInterface
	_param_if2_ref := _seq.FromRefNum(int32(param_if2))
	if _param_if2_ref != nil {
		if param_if2 < 0 { // go object
			_param_if2 = _param_if2_ref.Get().(libcore.BoxPlatformInterface)
		} else { // foreign object
			_param_if2 = (*proxylibcore_BoxPlatformInterface)(_param_if2_ref)
		}
	}
	libcore.InitCore(_param_process, _param_cachePath, _param_internalAssets, _param_externalAssets, _param_maxLogSizeKb, _param_logEnable, _param_if1, _param_if2)
}

//export proxylibcore__NekoLogClear
func proxylibcore__NekoLogClear() {
	libcore.NekoLogClear()
}

//export proxylibcore__NekoLogPrintln
func proxylibcore__NekoLogPrintln(param_s C.nstring) {
	_param_s := decodeString(param_s)
	libcore.NekoLogPrintln(_param_s)
}

//export proxylibcore__NewHttpClient
func proxylibcore__NewHttpClient() C.int32_t {
	res_0 := libcore.NewHttpClient()
	var _res_0 C.int32_t = _seq.NullRefNum
	if res_0 != nil {
		_res_0 = C.int32_t(_seq.ToRefNum(res_0))
	}
	return _res_0
}

//export proxylibcore__NewSingBoxInstance
func proxylibcore__NewSingBoxInstance(param_config C.nstring) (C.int32_t, C.int32_t) {
	_param_config := decodeString(param_config)
	res_0, res_1 := libcore.NewSingBoxInstance(_param_config)
	var _res_0 C.int32_t = _seq.NullRefNum
	if res_0 != nil {
		_res_0 = C.int32_t(_seq.ToRefNum(res_0))
	}
	var _res_1 C.int32_t = _seq.NullRefNum
	if res_1 != nil {
		_res_1 = C.int32_t(_seq.ToRefNum(res_1))
	}
	return _res_0, _res_1
}

//export proxylibcore__RegisterLocalDNSTransport
func proxylibcore__RegisterLocalDNSTransport(param_transport C.int32_t) {
	var _param_transport libcore.LocalDNSTransport
	_param_transport_ref := _seq.FromRefNum(int32(param_transport))
	if _param_transport_ref != nil {
		if param_transport < 0 { // go object
			_param_transport = _param_transport_ref.Get().(libcore.LocalDNSTransport)
		} else { // foreign object
			_param_transport = (*proxylibcore_LocalDNSTransport)(_param_transport_ref)
		}
	}
	libcore.RegisterLocalDNSTransport(_param_transport)
}

//export proxylibcore__ResetAllConnections
func proxylibcore__ResetAllConnections(param_system C.char) {
	_param_system := param_system != 0
	libcore.ResetAllConnections(_param_system)
}

//export proxylibcore__Sha1
func proxylibcore__Sha1(param_data C.nbyteslice) C.nbyteslice {
	_param_data := toSlice(param_data, false)
	res_0 := libcore.Sha1(_param_data)
	_res_0 := fromSlice(res_0, true)
	return _res_0
}

//export proxylibcore__Sha256Hex
func proxylibcore__Sha256Hex(param_data C.nbyteslice) C.nstring {
	_param_data := toSlice(param_data, false)
	res_0 := libcore.Sha256Hex(_param_data)
	_res_0 := encodeString(res_0)
	return _res_0
}

//export proxylibcore__StunTest
func proxylibcore__StunTest(param_server C.nstring) C.int32_t {
	_param_server := decodeString(param_server)
	res_0 := libcore.StunTest(_param_server)
	var _res_0 C.int32_t = _seq.NullRefNum
	if res_0 != nil {
		_res_0 = C.int32_t(_seq.ToRefNum(res_0))
	}
	return _res_0
}

//export proxylibcore__Unxz
func proxylibcore__Unxz(param_archive C.nstring, param_path C.nstring) C.int32_t {
	_param_archive := decodeString(param_archive)
	_param_path := decodeString(param_path)
	res_0 := libcore.Unxz(_param_archive, _param_path)
	var _res_0 C.int32_t = _seq.NullRefNum
	if res_0 != nil {
		_res_0 = C.int32_t(_seq.ToRefNum(res_0))
	}
	return _res_0
}

//export proxylibcore__Unzip
func proxylibcore__Unzip(param_archive C.nstring, param_path C.nstring) C.int32_t {
	_param_archive := decodeString(param_archive)
	_param_path := decodeString(param_path)
	res_0 := libcore.Unzip(_param_archive, _param_path)
	var _res_0 C.int32_t = _seq.NullRefNum
	if res_0 != nil {
		_res_0 = C.int32_t(_seq.ToRefNum(res_0))
	}
	return _res_0
}

//export proxylibcore__UrlTest
func proxylibcore__UrlTest(param_i C.int32_t, param_link C.nstring, param_timeout C.int32_t) (C.int32_t, C.int32_t) {
	// Must be a Go object
	var _param_i *libcore.BoxInstance
	if _param_i_ref := _seq.FromRefNum(int32(param_i)); _param_i_ref != nil {
		_param_i = _param_i_ref.Get().(*libcore.BoxInstance)
	}
	_param_link := decodeString(param_link)
	_param_timeout := int32(param_timeout)
	res_0, res_1 := libcore.UrlTest(_param_i, _param_link, _param_timeout)
	_res_0 := C.int32_t(res_0)
	var _res_1 C.int32_t = _seq.NullRefNum
	if res_1 != nil {
		_res_1 = C.int32_t(_seq.ToRefNum(res_1))
	}
	return _res_0, _res_1
}

//export proxylibcore__VersionBox
func proxylibcore__VersionBox() C.nstring {
	res_0 := libcore.VersionBox()
	_res_0 := encodeString(res_0)
	return _res_0
}
