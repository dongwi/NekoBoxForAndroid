// Code generated by gobind. DO NOT EDIT.

// JNI function headers for the Go <=> Java bridge.
//
//   autogenerated by gobind -lang=java libcore

#ifndef __Libcore_H__
#define __Libcore_H__

#include <jni.h>

extern jclass proxy_class_libcore_BoxPlatformInterface;
extern jmethodID proxy_class_libcore_BoxPlatformInterface_cons;

int32_t cproxylibcore_BoxPlatformInterface_AutoDetectInterfaceControl(int32_t refnum, int32_t fd);

typedef struct cproxylibcore_BoxPlatformInterface_FindConnectionOwner_return {
	int32_t r0;
	int32_t r1;
} cproxylibcore_BoxPlatformInterface_FindConnectionOwner_return;
struct cproxylibcore_BoxPlatformInterface_FindConnectionOwner_return cproxylibcore_BoxPlatformInterface_FindConnectionOwner(int32_t refnum, int32_t ipProtocol, nstring sourceAddress, int32_t sourcePort, nstring destinationAddress, int32_t destinationPort);

typedef struct cproxylibcore_BoxPlatformInterface_OpenTun_return {
	nint r0;
	int32_t r1;
} cproxylibcore_BoxPlatformInterface_OpenTun_return;
struct cproxylibcore_BoxPlatformInterface_OpenTun_return cproxylibcore_BoxPlatformInterface_OpenTun(int32_t refnum, nstring singTunOptionsJson, nstring tunPlatformOptionsJson);

typedef struct cproxylibcore_BoxPlatformInterface_PackageNameByUid_return {
	nstring r0;
	int32_t r1;
} cproxylibcore_BoxPlatformInterface_PackageNameByUid_return;
struct cproxylibcore_BoxPlatformInterface_PackageNameByUid_return cproxylibcore_BoxPlatformInterface_PackageNameByUid(int32_t refnum, int32_t uid);

typedef struct cproxylibcore_BoxPlatformInterface_UIDByPackageName_return {
	int32_t r0;
	int32_t r1;
} cproxylibcore_BoxPlatformInterface_UIDByPackageName_return;
struct cproxylibcore_BoxPlatformInterface_UIDByPackageName_return cproxylibcore_BoxPlatformInterface_UIDByPackageName(int32_t refnum, nstring packageName);

char cproxylibcore_BoxPlatformInterface_UseProcFS(int32_t refnum);

nstring cproxylibcore_BoxPlatformInterface_WIFIState(int32_t refnum);

extern jclass proxy_class_libcore_Func;
extern jmethodID proxy_class_libcore_Func_cons;

int32_t cproxylibcore_Func_Invoke(int32_t refnum);

extern jclass proxy_class_libcore_HTTPClient;
extern jmethodID proxy_class_libcore_HTTPClient_cons;

void cproxylibcore_HTTPClient_Close(int32_t refnum);

void cproxylibcore_HTTPClient_KeepAlive(int32_t refnum);

void cproxylibcore_HTTPClient_ModernTLS(int32_t refnum);

int32_t cproxylibcore_HTTPClient_NewRequest(int32_t refnum);

void cproxylibcore_HTTPClient_PinnedSHA256(int32_t refnum, nstring sumHex);

void cproxylibcore_HTTPClient_PinnedTLS12(int32_t refnum);

void cproxylibcore_HTTPClient_RestrictedTLS(int32_t refnum);

void cproxylibcore_HTTPClient_TrySocks5(int32_t refnum, int32_t port);

extern jclass proxy_class_libcore_HTTPRequest;
extern jmethodID proxy_class_libcore_HTTPRequest_cons;

void cproxylibcore_HTTPRequest_AllowInsecure(int32_t refnum);

typedef struct cproxylibcore_HTTPRequest_Execute_return {
	int32_t r0;
	int32_t r1;
} cproxylibcore_HTTPRequest_Execute_return;
struct cproxylibcore_HTTPRequest_Execute_return cproxylibcore_HTTPRequest_Execute(int32_t refnum);

void cproxylibcore_HTTPRequest_SetContent(int32_t refnum, nbyteslice content);

void cproxylibcore_HTTPRequest_SetContentString(int32_t refnum, nstring content);

void cproxylibcore_HTTPRequest_SetHeader(int32_t refnum, nstring key, nstring value);

void cproxylibcore_HTTPRequest_SetMethod(int32_t refnum, nstring method);

int32_t cproxylibcore_HTTPRequest_SetURL(int32_t refnum, nstring link);

void cproxylibcore_HTTPRequest_SetUserAgent(int32_t refnum, nstring userAgent);

extern jclass proxy_class_libcore_HTTPResponse;
extern jmethodID proxy_class_libcore_HTTPResponse_cons;

typedef struct cproxylibcore_HTTPResponse_GetContent_return {
	nbyteslice r0;
	int32_t r1;
} cproxylibcore_HTTPResponse_GetContent_return;
struct cproxylibcore_HTTPResponse_GetContent_return cproxylibcore_HTTPResponse_GetContent(int32_t refnum);

typedef struct cproxylibcore_HTTPResponse_GetContentString_return {
	nstring r0;
	int32_t r1;
} cproxylibcore_HTTPResponse_GetContentString_return;
struct cproxylibcore_HTTPResponse_GetContentString_return cproxylibcore_HTTPResponse_GetContentString(int32_t refnum);

nstring cproxylibcore_HTTPResponse_GetHeader(int32_t refnum, nstring p0);

int32_t cproxylibcore_HTTPResponse_WriteTo(int32_t refnum, nstring path);

extern jclass proxy_class_libcore_LocalDNSTransport;
extern jmethodID proxy_class_libcore_LocalDNSTransport_cons;

int32_t cproxylibcore_LocalDNSTransport_Exchange(int32_t refnum, int32_t ctx, nbyteslice message);

int32_t cproxylibcore_LocalDNSTransport_Lookup(int32_t refnum, int32_t ctx, nstring network, nstring domain);

char cproxylibcore_LocalDNSTransport_Raw(int32_t refnum);

extern jclass proxy_class_libcore_NB4AInterface;
extern jmethodID proxy_class_libcore_NB4AInterface_cons;

void cproxylibcore_NB4AInterface_Selector_OnProxySelected(int32_t refnum, nstring selectorTag, nstring tag);

char cproxylibcore_NB4AInterface_UseOfficialAssets(int32_t refnum);

extern jclass proxy_class_libcore_BoxInstance;
extern jmethodID proxy_class_libcore_BoxInstance_cons;
extern jclass proxy_class_libcore_ExchangeContext;
extern jmethodID proxy_class_libcore_ExchangeContext_cons;
extern jclass proxy_class_libcore_StunResult;
extern jmethodID proxy_class_libcore_StunResult_cons;
#endif
